name: Backend Integration Test

on: [push]

jobs:
  integration:
    services:
      mysql:
        image: mysql:9
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: test
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
      mqtt:
        image: eclipse-mosquitto:latest
        ports:
          - "1883:1883"
          - "9001:9001"
        volumes:
          - ./backend/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
          - ./backend/mqtt/mosquitto/passwd:/etc/mosquitto/passwd:ro
        options: >-
          --health-cmd "mosquitto_pub -h localhost -p 1883 -t test -m 'health check' || exit 1"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: migrate
        run: mysql -u"root" -p"test" -h"127.0.0.1" --port=3306 < ./run/db-migration.sql
#      - name: start mqtt
#        uses: namoshek/mosquitto-github-action@v1
#        with:
#          version: 'latest'
#          ports: '1883:1883 8883:8883'
#          config: ${{ github.workspace }}/backend/mqtt/mosquitto.conf
#          password-file: ${{ github.workspace }}/backend/mqtt/mosquitto/passwd
#          container-name: 'mqtt'
#      - name: start mqtt
#        run: |
#              docker run\
#                --detach\
#                --name mqtt\
#                --publish 1883:1883\
#                --network ${{job.container.network}}\
#                --volume ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro\
#                --volume ./mqtt/mosquitto/passwd:/mosquitto/config/mosquitto.passwd:ro\
#                eclipse-mosquitto:latest
      - name: mqtt healthcheck
        run: |
          sleep 10
          docker ps
          nc -zv 127.0.0.1 1883
          sudo apt-get update && sudo apt-get install -y mosquitto-clients
          mosquitto_pub -h 127.0.0.1 -p 1883 -t "test" -m "healthcheck" || exit 1
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew :api:test
